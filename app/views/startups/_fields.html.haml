.control-group{error_css(@startup, :name)}
  = f.label :name, "Startup Name", :class => 'control-label'
  .controls
    = f.text_field :name, :class => "span3"
    = f.semantic_errors :name

- unless @startup.new_record?
  .control-group
    = f.label :team_size, "Team Members", :class => 'control-label'
    .controls
      %ul
      - @startup.team_members.order(:name).each do |u|
        %li
          = link_to u.name, u
          &nbsp;
          = link_to '<i class="icon icon-remove"></i>'.html_safe, remove_team_member_startup_path(:user_id => u.id), :method => :post, :confirm => "Are you sure you want to remove #{u.name}?"

  .control-group
    %label.control-label Mentors
    .controls
      - mentors = @startup.mentors
      - if mentors.size == 0
        None
      - else
        %ul
        - mentors.each do |u|
          %li
            = link_to u.name, u


  .control-group{error_css(@startup, :main_contact_id)}
    = f.label :main_contact_id, "Main Contact", :class => 'control-label'
    .controls
      = f.select :main_contact_id, options_for_select(@startup.team_members.map{|tm| [tm.name, tm.id] }, @startup.main_contact_id), :include_blank => true
      = f.semantic_errors :main_contact_id
    
.control-group{error_css(@startup, :one_liner)}
  = f.label :one_liner, :class => 'control-label'
  .controls
    = f.text_field :one_liner, :class => "span3 with-placeholder", :placeholder => "ex: Facebook for Kittens"
    = f.semantic_errors :one_liner

.control-group{error_css(@startup, :elevator_pitch)}
  = f.label :elevator_pitch, :class => 'control-label'
  .controls
    = f.text_area :elevator_pitch, :size => '80x4', :class => "span4"
    = f.semantic_errors :elevator_pitch

.control-group{error_css(@startup, :website_url)}
  = f.label :website_url, "Website", :class => 'control-label'
  .controls
    = f.text_field :website_url, :class => 'span3 with-placeholder'
    = f.semantic_errors :website_url
    %span.help-inline.help-danger Optional

.control-group{error_css(@startup, :logo)}
  = f.label :logo, 'Logo', :class => 'control-label'
  .controls
    = f.file_field :logo
    = f.hidden_field :logo_cache
    = f.semantic_errors :logo
    - if @startup.logo?
      %br/
      Current Image:
      = image_tag(@startup.logo_url(:small))
      &nbsp;
      = f.check_box :remove_logo
      Remove logo
    %span.help-inline.help-danger Optional

- unless @setup
  %hr/

  .control-group{error_css(@startup, :intro_video_url)}
    = f.label :intro_video_url, "Team Intro Video URL", :class => 'control-label'
    .controls
      = f.text_field :intro_video_url, :class => 'span3 with-placeholder'
      = f.semantic_errors :intro_video_url
      %span.help-inline.help-danger
        Upload a 30 second video to Youtube that introduces your team so that everyone can "meet" you.
        %br/
        Set it as unlisted but allow it to be embedded.


  .control-group{error_css(@startup, :pitch_video_url)}
    = f.label :pitch_video_url, "2 Minute Pitch Video Url", :class => 'control-label'
    .controls
      = f.text_field :pitch_video_url, :class => 'span3 with-placeholder'
      = f.semantic_errors :pitch_video_url
      %span.help-inline.help-danger
        Upload a 2 minute video to Youtube of your startup's pitch.
        %br/
        Set it as unlisted but allow it to be embedded.
  %hr/
      


.control-group{error_css(@startup, :industry_list)}
  = f.label :industry_list, "Market(s)", :class => 'control-label'
  .controls
    = text_field_tag 'startup[industry_list]', @startup.industry_list.map{|i| i.titleize }.join(', '), :class => 'span4 industries_list_autocomplete', :placeholder => 'ex: mobile games, education'
    = f.semantic_errors :industry_list
    %p.help-block List at least one market that your startup is in

.control-group{error_css(@startup, :growth_model)}
  = f.label :growth_model, "Growth Model", :class => 'control-label'
  .controls
    = f.select :growth_model, options_for_select(Startup.growth_model_select_options, @startup.growth_model), :include_blank => true
    = f.semantic_errors :growth_model
    %p.help-block How will you get customers / users?

.control-group{error_css(@startup, :stage)}
  = f.label :stage, "Stage of Company", :class => 'control-label'
  .controls
    = f.select :stage, options_for_select(Startup.stage_select_options, @startup.stage), :include_blank => true
    = f.semantic_errors :stage

.control-group{error_css(@startup, :company_goal)}
  = f.label :company_goal, "Company Goal", :class => 'control-label'
  .controls
    = f.select :company_goal, options_for_select(Startup.company_goal_select_options, @startup.company_goal), :include_blank => true
    = f.semantic_errors :company_goal

- unless @startup.new_record?
  %hr/
  %br/
  %h3 Product Screenshots
  %p Upload product screenshots to be included on your profile (they will be displayed at 1024x768):

  = f.fields_for :screenshots do |ss|
    .control-group{error_css(ss.object, :image)}
      .controls
        - if ss.object.image?
          = image_tag(ss.object.image_url(:small))
          &nbsp;
          / remove_image doesn't work - so using rails' nested form _destroy attribute
          = ss.check_box :_destroy
          Remove image
        - else
          = ss.file_field :image
          = ss.hidden_field :image_cache
        = ss.semantic_errors :image
        

/ %hr

/ .control-group{error_css(@startup, :meeting_id)}
/   = f.label :meeting_id, "Where is your<br>team located?".html_safe, :class => 'control-label'
/   .controls
/     = f.select :meeting_id, options_for_select(Meeting.select_options, @startup.meeting_id), :include_blank => true
/     = f.semantic_errors :meeting_id
/     .row
/       .span5
/         %p.help-block
/           We're looking to put together in-person dinners in the major startup hubs. If you are close enough to one of these hubs, choose it from this list. If your location is not on the list, choose "other" and enter it below.
